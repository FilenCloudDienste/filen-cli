name: Build and attach artifacts

on:
  release:
    types: [ published ]

jobs:
  build-and-publish-binaries:
    name: Build binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Inject version
        uses: richardrigutins/replace-in-files@v2
        with:
          files: "package.json"
          search-text: "\"version\": \"0.0.0\""
          replacement-text: "\"version\": \"${{ github.event.release.tag_name }}\""
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - run: npm ci
      - run: npm run package
      - name: Sign and notarize macos binaries
        run: |
          # install ldid
          curl -o ldid -L https://github.com/ProcursusTeam/ldid/releases/download/v2.1.5-procursus7/ldid_linux_x86_64
          chmod +x ./ldid
          # import certificate
          echo "${{ secrets.APPLE_DEVELOPER_ID_CERT }}" | base64 --decode > certificate.p12
          # sign using ldid
          ./ldid -s -Kcertificate.p12 -U${{ secrets.APPLE_DEVELOPER_ID_CERT_PASS }} dist/filen-cli-macos-arm64
          ./ldid -s -Kcertificate.p12 -U${{ secrets.APPLE_DEVELOPER_ID_CERT_PASS }} dist/filen-cli-macos-x64
          # cleanup
          rm -f certificate.p12
      - name: Rename win/linux binaries to include release number
        run: node -e "['win-x64.exe', 'win-arm64.exe', 'linux-x64', 'linux-arm64'].forEach(suffix => { if (fs.existsSync('dist/filen-cli-'+suffix)) { fs.renameSync('dist/filen-cli-'+suffix, 'dist/filen-cli-${{ github.event.release.tag_name }}-'+suffix) } })"
      - name: Attach win/linux binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/filen-cli-${{ github.event.release.tag_name }}-*
      - name: Upload macos binaries as build artifact
        uses: actions/upload-artifact@v4
        with: 
          name: macos-binaries
          path: dist/filen-cli-macos-*
  
  notarize-and-publish-macos-binaries:
    name: Notarize and publish macos binaries
    runs-on: macos-latest
    needs: build-and-publish-binaries
    steps:
      - name: Download macos binares build artifact
        uses: actions/download-artifact@v4
        with:
          name: macos-binaries
      - name: Check
        run: ls -R
      - name: Codesign and notarize on macOS
        env: 
          APPLE_NOTARIZE_ID: ${{ secrets.APPLE_NOTARIZE_ID }}
          APPLE_NOTARIZE_PASS: ${{ secrets.APPLE_NOTARIZE_PASS }}
          APPLE_NOTARIZE_TEAM_ID: ${{ secrets.APPLE_NOTARIZE_TEAM_ID }}
        run: |
          zip dist/filen-cli-macos.zip dist/filen-cli-macos-x64 dist/filen-cli-macos-arm64
          xcrun notarytool submit dist/filen-cli-macos.zip --apple-id $APPLE_NOTARIZE_ID --password $APPLE_NOTARIZE_PASS --team-id $APPLE_NOTARIZE_TEAM_ID --output-format json --wait 2>&1 | tee notarization_info.json
          id=$(cat notarization_info.json | jq -r '.id')
          xcrun notarytool log $id --apple-id $APPLE_NOTARIZE_ID --password $APPLE_NOTARIZE_PASS --team-id $APPLE_NOTARIZE_TEAM_ID
      - name: Rename win/linux binaries to include release number
        run: node -e "['macos-x64', 'macos-arm64'].forEach(suffix => { if (fs.existsSync('dist/filen-cli-'+suffix)) { fs.renameSync('dist/filen-cli-'+suffix, 'dist/filen-cli-${{ github.event.release.tag_name }}-'+suffix) } })"
      - name: Attach macos binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/filen-cli-${{ github.event.release.tag_name }}-*

  build-and-publish-docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    if: ${{ github.event.release.prerelease == false }}
    steps:
      - uses: actions/checkout@v3
      - name: Inject version
        uses: richardrigutins/replace-in-files@v2
        with:
          files: "package.json"
          search-text: "\"version\": \"0.0.0\""
          replacement-text: "\"version\": \"${{ github.event.release.tag_name }}\""
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: filen/cli:latest,filen/cli:${{ github.event.release.tag_name }}