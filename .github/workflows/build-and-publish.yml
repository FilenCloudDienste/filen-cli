name: Build and attach artifacts

on:
  release:
    types: [ published ]

jobs:
  build-and-publish-binaries:
    name: Build binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Inject version
        uses: richardrigutins/replace-in-files@v2
        with:
          files: "package.json"
          search-text: "\"version\": \"0.0.0\""
          replacement-text: "\"version\": \"${{ github.event.release.tag_name }}\""
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - run: npm ci
      - run: npm run package
      - name: Sign and notarize macOS binaries
        run: |
          # install ldid
          curl -o ldid -L https://github.com/ProcursusTeam/ldid/releases/download/v2.1.5-procursus7/ldid_linux_x86_64
          chmod +x ./ldid
          # import certificate
          echo "${{ secrets.APPLE_DEVELOPER_ID_CERT }}" | base64 --decode > certificate.p12
          # sign using ldid
          ./ldid -s -Kcertificate.p12 -U${{ secrets.APPLE_DEVELOPER_ID_CERT_PASS }} dist/filen-cli-macos-arm64
          ./ldid -s -Kcertificate.p12 -U${{ secrets.APPLE_DEVELOPER_ID_CERT_PASS }} dist/filen-cli-macos-x64
          # cleanup
          rm -f certificate.p12
      - name: Rename binaries to include release number
        run: node -e "['win-x64.exe', 'win-arm64.exe', 'linux-x64', 'linux-arm64', 'macos-x64', 'macos-arm64'].forEach(suffix => { if (fs.existsSync('dist/filen-cli-'+suffix)) { fs.renameSync('dist/filen-cli-'+suffix, 'dist/filen-cli-${{ github.event.release.tag_name }}-'+suffix) } })"
      - name: Attach binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/filen-cli-${{ github.event.release.tag_name }}-*

  build-and-publish-docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    if: ${{ github.event.release.prerelease == false }}
    steps:
      - uses: actions/checkout@v3
      - name: Inject version
        uses: richardrigutins/replace-in-files@v2
        with:
          files: "package.json"
          search-text: "\"version\": \"0.0.0\""
          replacement-text: "\"version\": \"${{ github.event.release.tag_name }}\""
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: filen/cli:latest,filen/cli:${{ github.event.release.tag_name }}