# This workflow runs when new releases are published.
# It builds the artifacts using `npm run package`.
# QEMU emulation is used for arm64 builds.
# The crypto base key for injection is read from the `FILEN_CLI_CRYPTO_BASE_KEY` environment variable.
# The current version is injected.
# All build artifacts are then attached to the release.

name: Build and attach artifacts

on:
  release:
    types: [ published ]

jobs:
  build-and-publish-binaries:
    name: Build artifacts and attach to release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            build-script: package-win-linux
            test-binary: dist/filen-cli-linux-x64
          - os: macos-latest
            build-script: package-macos
            test-binary: dist/filen-cli-macos-arm64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    env:
      APPLE_DEVELOPER_ID_CERT: ${{ secrets.APPLE_DEVELOPER_ID_CERT }}
      APPLE_DEVELOPER_ID_CERT_PASS: ${{ secrets.APPLE_DEVELOPER_ID_CERT_PASS }}
      APPLE_NOTARIZE_ID: ${{ secrets.APPLE_NOTARIZE_ID }}
      APPLE_NOTARIZE_PASS: ${{ secrets.APPLE_NOTARIZE_PASS }}
      APPLE_NOTARIZE_TEAM_ID: ${{ secrets.APPLE_NOTARIZE_TEAM_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Inject version
        uses: richardrigutins/replace-in-files@v2
        with:
          files: "package.json"
          search-text: "\"version\": \"0.0.0\""
          replacement-text: "\"version\": \"${{ github.event.release.tag_name }}\""
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - run: npm ci
      - run: npm run ${{ matrix.build-script }}
        env:
          FILEN_CLI_CRYPTO_BASE_KEY: ${{ secrets.FILEN_CLI_CRYPTO_BASE_KEY }}
      - name: Check info
        run: ${{ matrix.test-binary }} help
      - name: Codesign and notarize on macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          # import certificate
          echo "$APPLE_DEVELOPER_ID_CERT" | base64 --decode > certificate.p12
          security create-keychain -p actions build.keychain
          security import certificate.p12 -k ~/Library/Keychains/build.keychain -P "$APPLE_DEVELOPER_ID_CERT_PASS" -T /usr/bin/codesign
          security list-keychains -d user -s ~/Library/Keychains/build.keychain
          security set-keychain-settings -t 3600 -u ~/Library/Keychains/build.keychain
          security unlock-keychain -p actions ~/Library/Keychains/build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k actions ~/Library/Keychains/build.keychain
          # codesign
          codesign --sign "Developer ID Application: Filen Cloud Dienste UG (haftungsbeschraenkt)" --options runtime --force --keychain ~/Library/Keychains/build.keychain dist/filen-cli-macos-arm64
          # notarize
          /usr/bin/ditto -c -k --keepParent dist/filen-cli-macos-arm64 dist/filen-cli-macos-arm64.zip
          xcrun notarytool submit dist/filen-cli-macos-arm64.zip --apple-id $APPLE_NOTARIZE_ID --password $APPLE_NOTARIZE_PASS --team-id $APPLE_NOTARIZE_TEAM_ID --output-format json --wait 2>&1 | tee notarization_info.json
          id=$(cat notarization_info.json | jq -r '.id')
          xcrun notarytool log $id --apple-id $APPLE_NOTARIZE_ID --password $APPLE_NOTARIZE_PASS --team-id $APPLE_NOTARIZE_TEAM_ID
          # cleanup keychain
          security delete-keychain build.keychain
          rm -f certificate.p12
      - name: Rename artifacts to include release number
        run: |
          # move files only if they exist
          [ ! -f dist/filen-cli-win-x64.exe   ] || mv dist/filen-cli-win-x64.exe   dist/filen-cli-${{ github.event.release.tag_name }}-win-x64.exe
          [ ! -f dist/filen-cli-win-arm64.exe ] || mv dist/filen-cli-win-arm64.exe dist/filen-cli-${{ github.event.release.tag_name }}-win-arm64.exe
          [ ! -f dist/filen-cli-linux-x64     ] || mv dist/filen-cli-linux-x64     dist/filen-cli-${{ github.event.release.tag_name }}-linux-x64
          [ ! -f dist/filen-cli-linux-arm64   ] || mv dist/filen-cli-linux-arm64   dist/filen-cli-${{ github.event.release.tag_name }}-linux-arm64
          [ ! -f dist/filen-cli-macos-x64     ] || mv dist/filen-cli-macos-x64     dist/filen-cli-${{ github.event.release.tag_name }}-macos-x64
          [ ! -f dist/filen-cli-macos-arm64   ] || mv dist/filen-cli-macos-arm64   dist/filen-cli-${{ github.event.release.tag_name }}-macos-arm64
      - name: Attach artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/filen-cli-${{ github.event.release.tag_name }}-*
