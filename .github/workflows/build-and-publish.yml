# This workflow runs when new releases are published.
# It builds the artifacts using `npm run package`.
# QEMU emulation is used for arm64 builds.
# The crypto base key for injection is read from the `FILEN_CLI_CRYPTO_BASE_KEY` environment variable.
# The current version is injected.
# All build artifacts are then attached to the release.

name: Build and attach artifacts

on:
  release:
    types: [ published ]

jobs:
  build-and-publish-binaries-test:
    name: Build artifacts and attach to release (macos-arm64 test)
    runs-on: macos-latest
    permissions:
      contents: write
    env:
      APPLE_DEVELOPER_ID_CERT: ${{ secrets.APPLE_DEVELOPER_ID_CERT }}
      APPLE_DEVELOPER_ID_CERT_PASS: ${{ secrets.APPLE_DEVELOPER_ID_CERT_PASS }}
      APPLE_NOTARIZE_ID: ${{ secrets.APPLE_NOTARIZE_ID }}
      APPLE_NOTARIZE_PASS: ${{ secrets.APPLE_NOTARIZE_PASS }}
      APPLE_NOTARIZE_TEAM_ID: ${{ secrets.APPLE_NOTARIZE_TEAM_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set version
        uses: richardrigutins/replace-in-files@v2
        with:
          files: "package.json"
          search-text: "\"version\": \"0.0.0\""
          replacement-text: "\"version\": \"${{ github.event.release.tag_name }}\""
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - run: npm ci
      - name: Decode macOS certificate
        run: echo "$APPLE_DEVELOPER_ID_CERT" | base64 --decode > certificate.p12
      - name: Test to see if certificates are there
        run: |
          echo "dev id cert $APPLE_DEVELOPER_ID_CERT found"
          echo "$APPLE_DEVELOPER_ID_CERT_PASS" | wc -c
      - name: Import certificate to keychain
        run: |
          security create-keychain -p actions build.keychain
          security import certificate.p12 -k ~/Library/Keychains/build.keychain -P "$APPLE_DEVELOPER_ID_CERT_PASS" -T /usr/bin/codesign
          security list-keychains -d user -s ~/Library/Keychains/build.keychain
          security set-keychain-settings -t 3600 -u ~/Library/Keychains/build.keychain
          security unlock-keychain -p actions ~/Library/Keychains/build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k actions ~/Library/Keychains/build.keychain
      - run: npm run package-all
        env:
          FILEN_CLI_CRYPTO_BASE_KEY: ${{ secrets.FILEN_CLI_CRYPTO_BASE_KEY }}
      - name: Check info
        run: node dist/bundle.js --help
      - name: Codesign
        run: |
          codesign --sign "Developer ID Application: Filen Cloud Dienste UG (haftungsbeschraenkt)" --keychain ~/Library/Keychains/build.keychain dist/filen-cli-macos-arm64
      - name: Rename artifacts to include release number
        run: |
          mv dist/filen-cli-macos-x64 dist/filen-cli-${{ github.event.release.tag_name }}-macos-x64
          mv dist/filen-cli-macos-arm64 dist/filen-cli-${{ github.event.release.tag_name }}-macos-arm64
      - name: Attach artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/filen-cli-${{ github.event.release.tag_name }}-macos-x64
            dist/filen-cli-${{ github.event.release.tag_name }}-macos-arm64
